include:
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml

gemnasium-dependency_scanning:
  rules:
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_TAG

image: docker:23.0

variables:
 DOCKER_TLS_CERTDIR: ""

services:
 - docker:23.0-dind

stages:
  - build
  - test
  - deploy

.backend-change:
  rules:
    - changes:
        - backend/**/*
        - scripts/database/**/*
        - definitions/**/*

.frontend-change:
  rules:
    - changes:
      - frontend/**/*
      - common/**/*

.bs-change:
  rules:
    - changes:
      - broadcasting-service/**/*
      - common/**/*

.fs-change:
  rules:
    - changes:
        - scripts/file-service/**/*

build-frontend:
  stage: build
  rules:
  script:
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from iqbberlin/testcenter-frontend:dev
        --target dev -t iqbberlin/testcenter-frontend:dev -f docker/frontend.Dockerfile .
    - docker save iqbberlin/testcenter-frontend > frontend_image.tar
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push iqbberlin/testcenter-frontend:dev
  artifacts:
    paths:
      - frontend_image.tar
    expire_in: 30 minutes

test-frontend-unit:
  stage: test
  dependencies:
    - build-frontend
  script:
    - docker load -i frontend_image.tar
    - docker run -v ./docs/dist:/docs/dist iqbberlin/testcenter-frontend:dev npx ng test --watch=false --code-coverage
  artifacts:
    paths:
      - ./docs/dist/test-coverage-frontend-unit/*
    expire_in: 30 minutes

build-frontend-prod:
  stage: deploy
  dependencies:
    - build-frontend
  script:
    - |
      docker build --build-arg BUILDKIT_INLINE_CACHE=1
      --cache-from iqbberlin/testcenter-frontend:dev
      --cache-from iqbberlin/testcenter-frontend:prod-latest
      --target prod -t iqbberlin/testcenter-frontend:prod-latest
      -f docker/frontend.Dockerfile .
    - docker tag iqbberlin/testcenter-frontend:prod-latest iqbberlin/testcenter-frontend:$CI_COMMIT_TAG
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push iqbberlin/testcenter-frontend:prod-latest
    - docker push iqbberlin/testcenter-frontend:$CI_COMMIT_TAG
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json
